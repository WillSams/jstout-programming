MEMORY {
    # Work RAM
    ZP:     start = $0000, size = $0100, type = rw;
    STACK:  start = $0100, size = $0100, type = rw; # will define external symbols __STACK_START_, __STACK_SIZE_, __STACK_LAST_, __STACK_FILEOFFS_
    RAM:    start = $0200, size = $0600, type = rw;

    # NES Cartridge Header
    HEADER: start = $0000, size = $0010, type = ro, fill = yes, fillval = $00;

    # Program Banks
    PROG: start = $C000, size = $4000, type = ro, fill = yes, fillval = $FF;  #fills unused space with 11111111

    # Character Banks
    CHR: start = $0000, size = $4000, type = ro, fill = yes, fillval = $00;  # note: 16 KB in size for this MMC3 demo
}

SEGMENTS {
    ZEROPAGE: load = ZP,     type = zp;
    SPRITE:   load = RAM,    type = bss, start = $0200, define = yes; # Note:  'bss' means that this is an uninitialized segment (zeroes) 
    PALETTE:  load = RAM,    type = bss, start = $0300, define = yes;
    BUFFER:   load = RAM,    type = bss, start = $0320, define = yes;
	DATA:     load = RAM,    type = bss, start = $0400, define = yes;
    HEADER:   load = HEADER, type = ro;
    BANK_00:  load = PROG, type = ro;
	BANK_01:  load = PROG, type = ro;
	STARTS:   load = PROG, type = ro,  start = $FFF0;
    VECTORS:  load = PROG, type = ro,  start = $FFFA;
    CHR_00:   load = CHR, type = ro;
    CHR_01:   load = CHR, type = ro;
}